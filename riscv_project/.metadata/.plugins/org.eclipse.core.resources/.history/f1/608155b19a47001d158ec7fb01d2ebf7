#include <stdio.h>
#include "pwm.h"
#include "control.h"

#include "../../../../SoC/anlogic/Board/sf1_eval/Include/nuclei_sdk_hal.h"

#define LEDn  3
static uint32_t LED_CLORK[] = {SOC_LED_RED_GPIO_MASK, SOC_LED_GREEN_GPIO_MASK,SOC_LED_BLUE_GPIO_MASK};

void led_config(void)
{
    for(int i=0; i<LEDn; i++)
    {
        //gpio_iof_config(GPIO,LED_CLORK[i],IOF_SEL_DEF);
        gpio_enable_output(GPIO,LED_CLORK[i]);
        gpio_write(GPIO,LED_CLORK[i],1);
    }
}

void uart0_handler(void)
{

    if(uart_get_flag_rxip(UART0)==2)
    {

        gpio_toggle(GPIO,LED_CLORK[1]);

        uart_clean_fifo(UART0);
    }


}

int main(void)
{
	led_config();

	__enable_irq();
	ECLIC_Register_IRQ(UART0_IRQn, ECLIC_NON_VECTOR_INTERRUPT,
	                                    ECLIC_LEVEL_TRIGGER, 1, 1,
	                                    uart0_handler);

	uart_init(UART0, 115200,UART_BIT_LENGTH_8);
	uart_config_stopbit(UART0,UART_STOP_BIT_2);

	uart_set_rx_watermark(UART0,0);
	uart_enable_rxint(UART0);

	int a,b,c;
	c=a+b;

    set_pwm_clkdiv(0, 2);
    set_pwm_period(0, 33);
    set_pwm_duty(0, 17);
    pwm_cmd(0, ENABLE);

    set_pwm_clkdiv(1, 0);
    set_pwm_period(1, 10000);
    set_pwm_duty(1, 5000);
    pwm_cmd(1, ENABLE);

    set_pwm_clkdiv(2, 1);
    set_pwm_period(2, 500000);
    set_pwm_duty(2, 250000);
    pwm_cmd(2, ENABLE);

    set_pwm_clkdiv(3, 9);
    set_pwm_period(3, 20000);
    set_pwm_duty(3, 2000);
    pwm_cmd(3, ENABLE);

    while(1)
    {
        for(int i=0; i<LEDn; i++)
        {
            gpio_toggle(GPIO,LED_CLORK[i]);
            delay_1ms(1000);

//            printf("gpio_toggle\r\n");
            anl_printf("gpio_toggle\r\n");
        }
    }
}


